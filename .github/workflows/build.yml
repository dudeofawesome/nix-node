on:
  push:

jobs:
  define-matrix:
    runs-on: 'ubuntu-latest'
    outputs:
      versions: '${{ steps.versions.outputs.versions }}'
    steps:
      - uses: 'actions/checkout@v4'
      - name: 'ðŸŽ£ Pick versions to build'
        id: 'versions'
        run: |-
          # list major versions
          echo 'versions='"$(ls -1 versions | jq -ncR '[inputs]')" >> "$GITHUB_OUTPUT"

  build:
    runs-on: 'ubuntu-latest'
    needs:
      - 'define-matrix'
    strategy:
      matrix:
        os:
          - 'ubuntu-latest'
          - 'macos-latest'
        version: ${{ fromJSON(needs.define-matrix.outputs.versions) }}
    steps:
      - uses: 'actions/checkout@v4'
      - uses: 'cachix/install-nix-action@v27'
        with:
          github_access_token: '${{ secrets.GITHUB_TOKEN }}'
      - name: 'Set up Cachix'
        uses: 'cachix/cachix-action@v14'
        with:
          name: '${{ vars.CACHIX_NAME }}'
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: 'Build ${{ matrix.version }}'
        env:
          version: '${{ matrix.version }}'
        run: 'nix build --accept-flake-config ".#$version"'
      - name: 'Publish ${{ matrix.version }}'
        env:
          CACHIX_NAME: '${{ vars.CACHIX_NAME }}'
        run: 'cachix push "$CACHIX_NAME" `cd -P result && pwd`'
